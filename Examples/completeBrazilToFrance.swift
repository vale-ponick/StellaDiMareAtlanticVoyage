//
//  completeBrazilToFrance.swift
//  NauticalCalcProject
//
//  Created by –í–∞–ª–µ—Ä–∏—è –ü–æ–Ω–æ–º–∞—Ä–µ–≤–∞ on 08.10.2025.


//  Examples/CompleteBrazilFrance.swift
//  –ü–û–õ–ù–´–ô –ü–†–ò–ú–ï–†: –ú–∞—Ä—à—Ä—É—Ç –ë—Ä–∞–∑–∏–ª–∏—è-–§—Ä–∞–Ω—Ü–∏—è
//  –°–∫–æ–ø–∏—Ä—É–π —ç—Ç–æ—Ç –∫–æ–¥ –≤ main.swift –¥–ª—è –∑–∞–ø—É—Å–∫–∞

import Foundation

struct MapPoint {
    let name: String
    let latitude: Double
    let longitude: Double
    
    var coordinatesString: String {
        return "\(String(format: "%.2f", latitude))¬∞, \(String(format: "%.2f", longitude))¬∞"
    }
}

func calculateNewPoint(from start: MapPoint, distanceKm: Double, courseDegrees: Double, name: String) -> MapPoint {
    let earthRadiusKm = 6371.0
    
    let distanceRadians = distanceKm / earthRadiusKm
    let courseRadians = courseDegrees * .pi / 180.0
    
    let startLatRad = start.latitude * .pi / 180.0
    let startLonRad = start.longitude * .pi / 180.0
    
    let newLatRad = asin(
        sin(startLatRad) * cos(distanceRadians) +
        cos(startLatRad) * sin(distanceRadians) * cos(courseRadians)
    )
    
    let newLonRad = startLonRad + atan2(
        sin(courseRadians) * sin(distanceRadians) * cos(startLatRad),
        cos(distanceRadians) - sin(startLatRad) * sin(newLatRad)
    )
    
    let newLat = newLatRad * 180.0 / .pi
    let newLon = newLonRad * 180.0 / .pi
    
    return MapPoint(name: name, latitude: newLat, longitude: newLon)
}

// –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Ç–æ—á–∫—É
let startPoint = MapPoint(
    name: "–í–∏–ª–ª–∞ –≤–æ–∑–ª–µ –≥.–ö—É—Ä–∏—Ç–∏–±—ã,–ø–æ–±–µ—Ä–µ–∂—å–µ –∑–∞–ª–∏–≤–∞ –ü–∞—Ä–∞–Ω–∞–≥—É–∞, –ë—Ä–∞–∑–∏–ª–∏—è",
    latitude: -25.45,
    longitude: -48.35
)

// –†–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ–º —Ç–æ—á–∫–∏ –º–∞—Ä—à—Ä—É—Ç–∞
let point2 = calculateNewPoint(
    from: startPoint,
    distanceKm: 800,
    courseDegrees: 180,
    name: "–Æ–∂–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞"
)

let point3 = calculateNewPoint(
    from: point2,
    distanceKm: 80 * 14,
    courseDegrees: 0,
    name: "–í–æ–∑–ª–µ —Ç—Ä–æ–ø–∏–∫–∞ –ö–æ–∑–µ—Ä–æ–≥–∞"
)

let point4 = calculateNewPoint(
    from: point3,
    distanceKm: 70 * 80,
    courseDegrees: 0,
    name: "–°–µ–≤–µ—Ä–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞ - –ø–µ—Ä–µ—Ö–æ–¥ –≤ –°–µ–≤.–ø–æ–ª—É—à–∞—Ä–∏–µ"
)

let point5 = calculateNewPoint(
    from: point4,
    distanceKm: 3500,
    courseDegrees: 80,
    name: "–Æ–∂–Ω–æ–µ –ú–∞—Ä–æ–∫–∫–æ - 200 –∫–º —Å–µ–≤–µ—Ä–Ω–µ–µ –ú—ã—Å–∞ –ë–ª–∞–Ω–∫–æ"
)

let point6 = MapPoint(
    name: "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–µ –ø–æ–±–µ—Ä–µ–∂—å–µ, –ø–æ—Ä—Ç –î–∞—Ö–ª–∞",
    latitude: 23.70,
    longitude: -15.93
)

let point7 = MapPoint(
    name: "–§—Ä–∞–Ω—Ü–∏—è, –ø—É—Å—Ç—ã–Ω–Ω–∞—è –±—É—Ö—Ç–∞ –≤ –ë—Ä–µ—Ç–∞–Ω–∏",
    latitude: 48.70,
    longitude: -3.98
)

// –°–æ–∑–¥–∞–µ–º –º–∞—Ä—à—Ä—É—Ç
let route = [startPoint, point2, point3, point4, point5, point6, point7]

func distanceBetween(_ point1: MapPoint, _ point2: MapPoint) -> Double {
    let earthRadius = 6371.0
    
    let lat1 = point1.latitude * .pi / 180
    let lon1 = point1.longitude * .pi / 180
    let lat2 = point2.latitude * .pi / 180
    let lon2 = point2.longitude * .pi / 180
    
    let dLat = lat2 - lat1
    let dLon = lon2 - lon1
    
    let a = sin(dLat/2) * sin(dLat/2) +
            cos(lat1) * cos(lat2) *
            sin(dLon/2) * sin(dLon/2)
    let c = 2 * atan2(sqrt(a), sqrt(1-a))
    
    return earthRadius * c
}

// –í–´–í–û–î –ú–ê–†–®–†–£–¢–ê
print("üó∫Ô∏è –ü–û–õ–ù–´–ô –ú–ê–†–®–†–£–¢ –ë–†–ê–ó–ò–õ–ò–Ø-–§–†–ê–ù–¶–ò–Ø")

for (index, point) in route.enumerated() {
    print("\(index + 1). \(point.name) - \(point.coordinatesString)")
}

// –†–ê–°–°–¢–û–Ø–ù–ò–Ø
print("üìè –†–ê–°–°–¢–û–Ø–ù–ò–Ø –ú–ï–ñ–î–£ –¢–û–ß–ö–ê–ú–ò")

var totalDistance = 0.0
for i in 0..<route.count - 1 {
    let distance = distanceBetween(route[i], route[i + 1])
    totalDistance += distance
    print("\(i + 1) ‚Üí \(i + 2): \(String(format: "%.0f", distance)) –∫–º")
}

print("\nüìä –°–£–ú–ú–ê–†–ù–û–ï –†–ê–°–°–¢–û–Ø–ù–ò–ï: \(String(format: "%.0f", totalDistance)) –∫–º")

// –°–¢–ê–¢–ò–°–¢–ò–ö–ê
print("üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ê–†–®–†–£–¢–ê")

print("–í—Å–µ–≥–æ —Ç–æ—á–µ–∫: \(route.count)")
print("–°—Ç–∞—Ä—Ç: \(route.first!.name)")
print("–§–∏–Ω–∏—à: \(route.last!.name)")

if let southernmost = route.min(by: { $0.latitude < $1.latitude }) {
    print("–°–∞–º–∞—è —é–∂–Ω–∞—è —Ç–æ—á–∫–∞: \(southernmost.name) (\(String(format: "%.2f", southernmost.latitude))¬∞)")
}
if let northernmost = route.max(by: { $0.latitude < $1.latitude }) {
    print("–°–∞–º–∞—è —Å–µ–≤–µ—Ä–Ω–∞—è —Ç–æ—á–∫–∞: \(northernmost.name) (\(String(format: "%.2f", northernmost.latitude))¬∞)")
}

// –†–ê–°–ß–ï–¢–´ –¢–û–ü–õ–ò–í–ê –ò –í–†–ï–ú–ï–ù–ò
print("‚õΩ –†–ê–°–ß–ï–¢ –¢–û–ü–õ–ò–í–ê –ò –í–†–ï–ú–ï–ù–ò")

let averageSpeedKmh = 80.0
let fuelConsumptionPerHour = 25.0
let fuelPricePerLiter = 1.2

let totalHours = totalDistance / averageSpeedKmh
let totalLiters = totalHours * fuelConsumptionPerHour
let totalCost = totalLiters * fuelPricePerLiter
let days = Int(totalHours) / 24
let hours = Int(totalHours) % 24

print("–†–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞: \(String(format: "%.0f", totalLiters)) –ª–∏—Ç—Ä–æ–≤")
print("–°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–ø–ª–∏–≤–∞: \(String(format: "%.0f", totalCost)) —É.–µ.")
print("–û–±—â–µ–µ –≤—Ä–µ–º—è: \(String(format: "%.1f", totalHours)) —á–∞—Å–æ–≤")
print("–≠—Ç–æ: \(days) –¥–Ω–µ–π \(hours) —á–∞—Å–æ–≤")

// –í–†–ï–ú–Ø –ü–û –û–¢–†–ï–ó–ö–ê–ú
print("‚è±Ô∏è –í–†–ï–ú–Ø –ü–û –û–¢–†–ï–ó–ö–ê–ú")

for i in 0..<route.count - 1 {
    let distance = distanceBetween(route[i], route[i + 1])
    let hours = distance / 80.0
    print("\(i + 1). \(route[i].name) ‚Üí \(route[i + 1].name)")
    print("   –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: \(String(format: "%.0f", distance)) –∫–º")
    print("   –í—Ä–µ–º—è: \(String(format: "%.1f", hours)) —á–∞—Å–æ–≤")
}
/* üó∫Ô∏è –ü–û–õ–ù–´–ô –ú–ê–†–®–†–£–¢ –ë–†–ê–ó–ò–õ–ò–Ø-–§–†–ê–ù–¶–ò–Ø
 1. –í–∏–ª–ª–∞ –≤–æ–∑–ª–µ –≥.–ö—É—Ä–∏—Ç–∏–±—ã,–ø–æ–±–µ—Ä–µ–∂—å–µ –∑–∞–ª–∏–≤–∞ –ü–∞—Ä–∞–Ω–∞–≥—É–∞, –ë—Ä–∞–∑–∏–ª–∏—è - -25.45¬∞, -48.35¬∞
 2. –Æ–∂–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞ - -32.64¬∞, -48.35¬∞
 3. –í–æ–∑–ª–µ —Ç—Ä–æ–ø–∏–∫–∞ –ö–æ–∑–µ—Ä–æ–≥–∞ - -22.57¬∞, -48.35¬∞
 4. –°–µ–≤–µ—Ä–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞ - –ø–µ—Ä–µ—Ö–æ–¥ –≤ –°–µ–≤.–ø–æ–ª—É—à–∞—Ä–∏–µ - 27.79¬∞, -48.35¬∞
 5. –Æ–∂–Ω–æ–µ –ú–∞—Ä–æ–∫–∫–æ - 200 –∫–º —Å–µ–≤–µ—Ä–Ω–µ–µ –ú—ã—Å–∞ –ë–ª–∞–Ω–∫–æ - 28.54¬∞, -12.52¬∞
 6. –ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–µ –ø–æ–±–µ—Ä–µ–∂—å–µ, –ø–æ—Ä—Ç –î–∞—Ö–ª–∞ - 23.70¬∞, -15.93¬∞
 7. –§—Ä–∞–Ω—Ü–∏—è, –ø—É—Å—Ç—ã–Ω–Ω–∞—è –±—É—Ö—Ç–∞ –≤ –ë—Ä–µ—Ç–∞–Ω–∏ - 48.70¬∞, -3.98¬∞
 üìè –†–ê–°–°–¢–û–Ø–ù–ò–Ø –ú–ï–ñ–î–£ –¢–û–ß–ö–ê–ú–ò
 1 ‚Üí 2: 800 –∫–º
 2 ‚Üí 3: 1120 –∫–º
 3 ‚Üí 4: 5600 –∫–º
 4 ‚Üí 5: 3500 –∫–º
 5 ‚Üí 6: 637 –∫–º
 6 ‚Üí 7: 2971 –∫–º

 üìä –°–£–ú–ú–ê–†–ù–û–ï –†–ê–°–°–¢–û–Ø–ù–ò–ï: 14628 –∫–º
 üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –ú–ê–†–®–†–£–¢–ê
 –í—Å–µ–≥–æ —Ç–æ—á–µ–∫: 7
 –°—Ç–∞—Ä—Ç: –í–∏–ª–ª–∞ –≤–æ–∑–ª–µ –≥.–ö—É—Ä–∏—Ç–∏–±—ã,–ø–æ–±–µ—Ä–µ–∂—å–µ –∑–∞–ª–∏–≤–∞ –ü–∞—Ä–∞–Ω–∞–≥—É–∞, –ë—Ä–∞–∑–∏–ª–∏—è
 –§–∏–Ω–∏—à: –§—Ä–∞–Ω—Ü–∏—è, –ø—É—Å—Ç—ã–Ω–Ω–∞—è –±—É—Ö—Ç–∞ –≤ –ë—Ä–µ—Ç–∞–Ω–∏
 –°–∞–º–∞—è —é–∂–Ω–∞—è —Ç–æ—á–∫–∞: –Æ–∂–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞ (-32.64¬∞)
 –°–∞–º–∞—è —Å–µ–≤–µ—Ä–Ω–∞—è —Ç–æ—á–∫–∞: –§—Ä–∞–Ω—Ü–∏—è, –ø—É—Å—Ç—ã–Ω–Ω–∞—è –±—É—Ö—Ç–∞ –≤ –ë—Ä–µ—Ç–∞–Ω–∏ (48.70¬∞)
 ‚õΩ –†–ê–°–ß–ï–¢ –¢–û–ü–õ–ò–í–ê –ò –í–†–ï–ú–ï–ù–ò
 –†–∞—Å—Ö–æ–¥ —Ç–æ–ø–ª–∏–≤–∞: 4571 –ª–∏—Ç—Ä–æ–≤
 –°—Ç–æ–∏–º–æ—Å—Ç—å —Ç–æ–ø–ª–∏–≤–∞: 5486 —É.–µ.
 –û–±—â–µ–µ –≤—Ä–µ–º—è: 182.9 —á–∞—Å–æ–≤
 –≠—Ç–æ: 7 –¥–Ω–µ–π 14 —á–∞—Å–æ–≤
 ‚è±Ô∏è –í–†–ï–ú–Ø –ü–û –û–¢–†–ï–ó–ö–ê–ú
 1. –í–∏–ª–ª–∞ –≤–æ–∑–ª–µ –≥.–ö—É—Ä–∏—Ç–∏–±—ã,–ø–æ–±–µ—Ä–µ–∂—å–µ –∑–∞–ª–∏–≤–∞ –ü–∞—Ä–∞–Ω–∞–≥—É–∞, –ë—Ä–∞–∑–∏–ª–∏—è ‚Üí –Æ–∂–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞
    –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: 800 –∫–º
    –í—Ä–µ–º—è: 10.0 —á–∞—Å–æ–≤
 2. –Æ–∂–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞ ‚Üí –í–æ–∑–ª–µ —Ç—Ä–æ–ø–∏–∫–∞ –ö–æ–∑–µ—Ä–æ–≥–∞
    –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: 1120 –∫–º
    –í—Ä–µ–º—è: 14.0 —á–∞—Å–æ–≤
 3. –í–æ–∑–ª–µ —Ç—Ä–æ–ø–∏–∫–∞ –ö–æ–∑–µ—Ä–æ–≥–∞ ‚Üí –°–µ–≤–µ—Ä–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞ - –ø–µ—Ä–µ—Ö–æ–¥ –≤ –°–µ–≤.–ø–æ–ª—É—à–∞—Ä–∏–µ
    –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: 5600 –∫–º
    –í—Ä–µ–º—è: 70.0 —á–∞—Å–æ–≤
 4. –°–µ–≤–µ—Ä–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞ - –ø–µ—Ä–µ—Ö–æ–¥ –≤ –°–µ–≤.–ø–æ–ª—É—à–∞—Ä–∏–µ ‚Üí –Æ–∂–Ω–æ–µ –ú–∞—Ä–æ–∫–∫–æ - 200 –∫–º —Å–µ–≤–µ—Ä–Ω–µ–µ –ú—ã—Å–∞ –ë–ª–∞–Ω–∫–æ
    –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: 3500 –∫–º
    –í—Ä–µ–º—è: 43.7 —á–∞—Å–æ–≤
 5. –Æ–∂–Ω–æ–µ –ú–∞—Ä–æ–∫–∫–æ - 200 –∫–º —Å–µ–≤–µ—Ä–Ω–µ–µ –ú—ã—Å–∞ –ë–ª–∞–Ω–∫–æ ‚Üí –ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–µ –ø–æ–±–µ—Ä–µ–∂—å–µ, –ø–æ—Ä—Ç –î–∞—Ö–ª–∞
    –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: 637 –∫–º
    –í—Ä–µ–º—è: 8.0 —á–∞—Å–æ–≤
 6. –ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–µ –ø–æ–±–µ—Ä–µ–∂—å–µ, –ø–æ—Ä—Ç –î–∞—Ö–ª–∞ ‚Üí –§—Ä–∞–Ω—Ü–∏—è, –ø—É—Å—Ç—ã–Ω–Ω–∞—è –±—É—Ö—Ç–∞ –≤ –ë—Ä–µ—Ç–∞–Ω–∏
    –†–∞—Å—Å—Ç–æ—è–Ω–∏–µ: 2971 –∫–º
    –í—Ä–µ–º—è: 37.1 —á–∞—Å–æ–≤*/
