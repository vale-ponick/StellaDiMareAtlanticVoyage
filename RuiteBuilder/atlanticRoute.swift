//
//  atlanticRoute.swift
//  NauticalCalcProject
//
//  Created by –í–∞–ª–µ—Ä–∏—è –ü–æ–Ω–æ–º–∞—Ä–µ–≤–∞ on 08.10.2025.
//

import Foundation

// —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –±–ª–æ–∫–Ω–æ—Ç–∞: –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞

// –ó–ê–î–ê–ß–ê: –ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç –ë—Ä–∞–∑–∏–ª–∏—è-–§—Ä–∞–Ω—Ü–∏—è 

print("üß± –ü–û–°–¢–†–û–ï–ù–ò–ï –ú–ê–†–®–†–£–¢–ê –ë–†–ê–ó–ò–õ–ò–Ø-–§–†–ê–ù–¶–ò–Ø")

// 1. –°–æ–∑–¥–∞–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é —Ç–æ—á–∫—É
let startPoint = MapPoint(
    name: "–í–∏–ª–ª–∞ –≤–æ–∑–ª–µ –≥.–ö—É—Ä–∏—Ç–∏–±—ã,–ø–æ–±–µ—Ä–µ–∂—å–µ –∑–∞–ª–∏–≤–∞ –ü–∞—Ä–∞–Ω–∞–≥—É–∞, –ë—Ä–∞–∑–∏–ª–∏—è",
    latitude: -25.45,
    longitude: -48.35
)

print("üìç –¢–æ—á–∫–∞ 1: \(startPoint.name)")
print("   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: \(startPoint.coordinatesString)")

// 2. –†–ê–°–ß–ò–¢–´–í–ê–ï–ú point2 (800 –∫–º –Ω–∞ —é–≥)
let point2 = calculateNewPoint(
    from: startPoint,
    distanceKm: 800,
    courseDegrees: 180,
    name: "–Æ–∂–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞"
)

print("üìç –¢–æ—á–∫–∞ 2: \(point2.name)")
print("   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: \(point2.coordinatesString)")

// 3. –†–ê–°–ß–ò–¢–´–í–ê–ï–ú point3 (1120 –∫–º –Ω–∞ —Å–µ–≤–µ—Ä)
let point3 = calculateNewPoint(
    from: point2,
    distanceKm: 80 * 14,
    courseDegrees: 0,
    name: "–í–æ–∑–ª–µ —Ç—Ä–æ–ø–∏–∫–∞ –ö–æ–∑–µ—Ä–æ–≥–∞"
)

print("üìç –¢–æ—á–∫–∞ 3: \(point3.name)")
print("   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: \(point3.coordinatesString)")

// –ü–†–û–í–ï–†–ö–ê: –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å —Ç—Ä–æ–ø–∏–∫–æ–º –ö–æ–∑–µ—Ä–æ–≥–∞
let tropicOfCapricorn = -23.5
let difference = abs(point3.latitude - tropicOfCapricorn)
print("   üìç –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –æ—Ç —Ç—Ä–æ–ø–∏–∫–∞ –ö–æ–∑–µ—Ä–æ–≥–∞: \(String(format: "%.1f", difference))¬∞")

// 4. –†–ê–°–ß–ò–¢–´–í–ê–ï–ú point4 (5600 –∫–º –Ω–∞ —Å–µ–≤–µ—Ä)
let point4 = calculateNewPoint(
    from: point3,
    distanceKm: 70 * 80,
    courseDegrees: 0,
    name: "–°–µ–≤–µ—Ä–Ω–∞—è –ê—Ç–ª–∞–Ω—Ç–∏–∫–∞ - –ø–µ—Ä–µ—Ö–æ–¥ –≤ –°–µ–≤.–ø–æ–ª—É—à–∞—Ä–∏–µ"
)

print("üìç –¢–æ—á–∫–∞ 4: \(point4.name)")
print("   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: \(point4.coordinatesString)")

// 5. –†–ê–°–ß–ò–¢–´–í–ê–ï–ú point5 (3500 –∫–º –Ω–∞ –≤–æ—Å—Ç–æ–∫)
let point5 = calculateNewPoint(
    from: point4,
    distanceKm: 3500,
    courseDegrees: 80,
    name: "–Æ–∂–Ω–æ–µ –ú–∞—Ä–æ–∫–∫–æ - 200 –∫–º —Å–µ–≤–µ—Ä–Ω–µ–µ –ú—ã—Å–∞ –ë–ª–∞–Ω–∫–æ"
)

print("üìç –¢–æ—á–∫–∞ 5: \(point5.name)")
print("   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: \(point5.coordinatesString)")

// 6. –°–û–ó–î–ê–ï–ú point6 (–ø–æ—Ä—Ç –î–∞—Ö–ª–∞)
let point6 = MapPoint(
    name: "–ê—Ñ—Ä–∏–∫–∞–Ω—Å–∫–æ–µ –ø–æ–±–µ—Ä–µ–∂—å–µ, –ø–æ—Ä—Ç –î–∞—Ö–ª–∞",
    latitude: 23.70,
    longitude: -15.93
)

print("üìç –¢–æ—á–∫–∞ 6: \(point6.name)")
print("   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: \(point6.coordinatesString)")

// 7. –°–û–ó–î–ê–ï–ú point7 (–ë—Ä–µ—Ç–∞–Ω—å)
let point7 = MapPoint(
    name: "–§—Ä–∞–Ω—Ü–∏—è, –ø—É—Å—Ç—ã–Ω–Ω–∞—è –±—É—Ö—Ç–∞ –≤ –ë—Ä–µ—Ç–∞–Ω–∏",
    latitude: 48.70,
    longitude: -3.98
)

print("üìç –¢–æ—á–∫–∞ 7: \(point7.name)")
print("   –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã: \(point7.coordinatesString)")

// –§–ò–ù–ê–õ–¨–ù–´–ô –ú–ê–†–®–†–£–¢
let route: [MapPoint] = [
    startPoint, point2, point3, point4, point5, point6, point7
]

print("\n‚úÖ –ú–ê–†–®–†–£–¢ –ü–û–°–¢–†–û–ï–ù!")
print("   –í—Å–µ–≥–æ —Ç–æ—á–µ–∫: \(route.count)")
print("   –°—Ç–∞—Ä—Ç: \(route.first!.name)")
print("   –§–∏–Ω–∏—à: \(route.last!.name)")
